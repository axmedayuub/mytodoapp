{"version":3,"sources":["firebase.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","useState","todo","setTodo","list","setList","loading","setLoading","selloading","setSelloading","selectedid","setSelectedid","useEffect","firestore","collection","orderBy","onSnapshot","query","items","forEach","element","push","data","ids","id","className","type","value","onChange","e","target","for","onClick","doc","update","date","Date","getTime","add","map","item","get","then","exists","alert","delete","Delete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAaCA,IAASC,cAVa,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAIFR,QAAf,E,OCsHeS,MAlIf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAoCR,mBAAS,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KAyDA,OAvDAC,qBAAU,WACRL,GAAW,GACMhB,EACdsB,YACAC,WAAW,WACXC,QAAQ,OAAQ,QACVC,YAAW,SAACC,GACnB,IAAMC,EAAQ,GACdD,EAAME,SAAQ,SAACC,GACbF,EAAMG,KAAN,2BAAgBD,EAAQE,QAAxB,IAAgCC,IAAKH,EAAQI,SAE/CnB,EAAQa,GACRX,GAAW,QAEZ,IA0CD,qBAAKkB,UAAU,YAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,2CACA,sBAAKA,UAAU,sBAAf,UACE,uBACEC,KAAK,OACLC,MAAOzB,EACP0B,SAAU,SAACC,GAAD,OAAO1B,EAAQ0B,EAAEC,OAAOH,QAClCF,UAAU,wBACVM,IAAI,WAELvB,EACC,wBACEkB,KAAK,SACLD,UAAU,kBACVE,MAAOjB,EACPsB,QAAS,SAACH,GAAD,OA5BLL,EA4BmBK,EAAEC,OAAOH,MA3B1CpC,EAASsB,YAAYC,WAAW,WAAWmB,IAAIT,GAAIU,OAAO,CAAEhC,KAAMA,IAClEO,GAAc,QACdN,EAAQ,IAHV,IAAgBqB,GAwBN,kBASA,wBACEA,GAAG,SACHE,KAAK,SACLM,QA/DZ,SAAoBH,GAClB,IAAKrB,EAAY,CACf,IAAMc,EAAO,CACXpB,KAAMA,EACNiC,MAAM,IAAIC,MAAOC,WAEnB9C,EAASsB,YAAYC,WAAW,WAAWwB,IAAIhB,GAC/CnB,EAAQ,MAyDAsB,UAAU,yBAJZ,yBAUJ,uBAAOA,UAAU,mBAAjB,SACE,gCACGnB,EACG,6BAAI,mDACJF,EAAKmC,KAAI,SAAUC,GACjB,OACE,+BACE,6BAAKA,EAAKtC,OACV,6BACE,wBACEuB,UAAU,kBACVO,QAAS,SAACH,GAAD,OArEbL,EAqE+BK,EAAEC,OAAOH,MApE1DlB,GAAc,QACGlB,EAASsB,YAAYC,WAAW,WAAWmB,IAAIT,GACvDiB,MAAMC,MAAK,SAACT,GACnB,GAAIA,EAAIU,OAAQ,CACd,IAAMrB,EAAOW,EAAIX,OACjBnB,EAAQmB,EAAKpB,MACbS,EAAca,QAEdoB,MAAM,gCATZ,IAAoBpB,GAsEIG,MAAOa,EAAKjB,IAHd,oBAQF,6BACE,wBACEE,UAAU,iBACVO,QAAS,SAACR,GAAD,OAxDjC,SAAgBA,GACdjC,EAASsB,YAAYC,WAAW,WAAWmB,IAAIT,GAAIqB,SAuDZC,CAAOtB,EAAGM,OAAOH,QAClCA,MAAOa,EAAKjB,IAHd,wBAZKiB,EAAKjB,kB,kBC7FlCwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.80c65f30.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase'\r\nimport 'firebase/firestore'\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyB4lD8j4o9hpDLBbMx1c3PBlNYNnu6rH_4',\r\n  authDomain: 'todoapp-dc6d1.firebaseapp.com',\r\n  projectId: 'todoapp-dc6d1',\r\n  storageBucket: 'todoapp-dc6d1.appspot.com',\r\n  messagingSenderId: '1092870461229',\r\n  appId: '1:1092870461229:web:acaee1e0d5b0d7986165a4',\r\n  measurementId: 'G-3DTECM9MRN',\r\n}\r\n// Initialize Firebase\r\n firebase.initializeApp(firebaseConfig)\r\nexport default firebase","import React, { useState, useEffect } from 'react'\nimport firebase from './firebase'\nfunction App() {\n  const [todo, setTodo] = useState('')\n  const [list, setList] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [selloading, setSelloading] = useState(false)\n  const [selectedid, setSelectedid] = useState('')\n  //select todo lists\n  useEffect(() => {\n    setLoading(true)\n    const database = firebase\n      .firestore()\n      .collection('todoapp')\n      .orderBy('date', 'desc')\n    database.onSnapshot((query) => {\n      const items = []\n      query.forEach((element) => {\n        items.push({ ...element.data(), ids: element.id })\n      })\n      setList(items)\n      setLoading(false)\n    })\n  }, [])\n\n  //save the todolists\n  function formhundle(e) {\n    if (!selloading) {\n      const data = {\n        todo: todo,\n        date: new Date().getTime(),\n      }\n      firebase.firestore().collection('todoapp').add(data)\n      setTodo('')\n    }\n  }\n\n  //select specific todo list to update it\n  function selecttodo(id) {\n    setSelloading(true)\n    const database = firebase.firestore().collection('todoapp').doc(id)\n    database.get().then((doc) => {\n      if (doc.exists) {\n        const data = doc.data()\n        setTodo(data.todo)\n        setSelectedid(id)\n      } else {\n        alert('This collection not found')\n      }\n    })\n  }\n\n  //update todo\n  function update(id) {\n    firebase.firestore().collection('todoapp').doc(id).update({ todo: todo })\n    setSelloading(false)\n    setTodo('')\n  }\n\n  //delete todo\n  function Delete(id) {\n    firebase.firestore().collection('todoapp').doc(id).delete()\n  }\n\n  return (\n    <div className='container'>\n      <div className='sub jumbotron'>\n        <h1>Todo List</h1>\n        <div className='form-inline  d-flex'>\n          <input\n            type='text'\n            value={todo}\n            onChange={(e) => setTodo(e.target.value)}\n            className='form-control input-sm'\n            for='submit'\n          />\n          {selloading ? (\n            <button\n              type='submit'\n              className='btn btn-warning'\n              value={selectedid}\n              onClick={(e) => update(e.target.value)}\n            >\n              Edit\n            </button>\n          ) : (\n            <button\n              id='submit'\n              type='submit'\n              onClick={formhundle}\n              className='btn btn-sm btn-primary'\n            >\n              Add Todo\n            </button>\n          )}\n        </div>\n        <table className='table table-dark'>\n          <tbody>\n            {loading\n              ? <tr><td>Please wait....</td></tr>\n              : list.map(function (item) {\n                  return (\n                    <tr key={item.ids}>\n                      <td>{item.todo}</td>\n                      <td>\n                        <button\n                          className='btn btn-warning'\n                          onClick={(e) => selecttodo(e.target.value)}\n                          value={item.ids}\n                        >\n                          Edit\n                        </button>\n                      </td>\n                      <td>\n                        <button\n                          className='btn btn-danger'\n                          onClick={(id) => Delete(id.target.value)}\n                          value={item.ids}\n                        >\n                          Delete\n                        </button>\n                      </td>\n                    </tr>\n                  )\n                })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./Style.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}